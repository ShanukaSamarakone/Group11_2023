{"ast":null,"code":"var _jsxFileName = \"/Users/isamkhan/Desktop/Second Year/group code/Group11_2023/front_end/quaurus/src/components/UxbridgeMap.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport L from \"leaflet\";\nimport \"leaflet-control-geocoder/dist/Control.Geocoder.css\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"leaflet-control-geocoder\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UxbridgeMap() {\n  _s();\n  const mapRef = useRef(null); // Create a ref for the map container\n  const mapInstance = useRef(null); // To store the Leaflet map instance\n  const customIcon = L.icon({\n    iconUrl: \"https://cdn-icons-png.flaticon.com/128/15092/15092199.png\",\n    iconSize: [50, 50],\n    iconAnchor: [25, 50],\n    popupAnchor: [0, -50]\n  });\n  useEffect(() => {\n    // Only initialize the map if it hasn't been already\n    if (mapRef.current && !mapInstance.current) {\n      // Create a Leaflet map centered at Uxbridge coordinates\n      mapInstance.current = L.map(mapRef.current).setView([51.5444, -0.476], 15); // Uxbridge coordinates with zoom level 15\n      L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n        maxZoom: 19\n      }).addTo(mapInstance.current);\n      // Create a search control for geocoding (searching locations) within Uxbridge\n      const searchControl = L.Control.geocoder({\n        defaultMarkGeocode: false,\n        // Disable default marker on geocode\n        geocoder: L.Control.Geocoder.nominatim({\n          geocodingQueryParams: {\n            viewbox: \"-0.506,51.525,-0.446,51.563\",\n            // Define the boundary box for Uxbridge\n            bounded: 1 // Limit search to within the boundary box\n          }\n        })\n      }).addTo(mapInstance.current); // Add the search control to the map\n\n      // Event listener for when a location is selected from the search results\n      searchControl.on(\"markgeocode\", function (e) {\n        mapInstance.current.setView(e.geocode.center, 15); // Set the map view to the selected location with zoom level 15\n        var marker = L.marker(e.geocode.center, {\n          icon: customIcon\n        }).addTo(mapInstance.current); // Add a marker at the selected location\n        marker.bindPopup(`<div style=\"font-size: 10px;\">${e.geocode.name}</div>`).openPopup(); // Show a popup with the location name when clicked\n      });\n    }\n\n    // Cleanup function to run when the component unmounts\n    return () => {\n      if (mapInstance.current) {\n        mapInstance.current.remove(); // This properly cleans up the map instance\n        mapInstance.current = null; // Reset the map instance reference\n      }\n    };\n  }, []); // Empty dependency array means this effect runs only once on mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mapRef,\n    style: {\n      height: \"400px\",\n      width: \"100%\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 10\n  }, this); // The map container\n}\n_s(UxbridgeMap, \"jj23UBFmYip2SDX5FMmvO4fZUgM=\");\n_c = UxbridgeMap;\nexport default UxbridgeMap;\nvar _c;\n$RefreshReg$(_c, \"UxbridgeMap\");","map":{"version":3,"names":["React","useEffect","useRef","L","jsxDEV","_jsxDEV","UxbridgeMap","_s","mapRef","mapInstance","customIcon","icon","iconUrl","iconSize","iconAnchor","popupAnchor","current","map","setView","tileLayer","maxZoom","addTo","searchControl","Control","geocoder","defaultMarkGeocode","Geocoder","nominatim","geocodingQueryParams","viewbox","bounded","on","e","geocode","center","marker","bindPopup","name","openPopup","remove","ref","style","height","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/isamkhan/Desktop/Second Year/group code/Group11_2023/front_end/quaurus/src/components/UxbridgeMap.jsx"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport L from \"leaflet\";\nimport \"leaflet-control-geocoder/dist/Control.Geocoder.css\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"leaflet-control-geocoder\";\n\nfunction UxbridgeMap() {\n  const mapRef = useRef(null); // Create a ref for the map container\n  const mapInstance = useRef(null); // To store the Leaflet map instance\n  const customIcon = L.icon({\n    iconUrl: \"https://cdn-icons-png.flaticon.com/128/15092/15092199.png\",\n    iconSize: [50, 50],\n    iconAnchor: [25, 50],\n    popupAnchor: [0, -50],\n  });\n\n  useEffect(() => {\n    // Only initialize the map if it hasn't been already\n    if (mapRef.current && !mapInstance.current) {\n      // Create a Leaflet map centered at Uxbridge coordinates\n      mapInstance.current = L.map(mapRef.current).setView(\n        [51.5444, -0.476],\n        15\n      ); // Uxbridge coordinates with zoom level 15\n      L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n        maxZoom: 19,\n      }).addTo(mapInstance.current);\n      // Create a search control for geocoding (searching locations) within Uxbridge\n      const searchControl = L.Control.geocoder({\n        defaultMarkGeocode: false, // Disable default marker on geocode\n        geocoder: L.Control.Geocoder.nominatim({\n          geocodingQueryParams: {\n            viewbox: \"-0.506,51.525,-0.446,51.563\", // Define the boundary box for Uxbridge\n            bounded: 1, // Limit search to within the boundary box\n          },\n        }),\n      }).addTo(mapInstance.current); // Add the search control to the map\n\n      // Event listener for when a location is selected from the search results\n      searchControl.on(\"markgeocode\", function (e) {\n        mapInstance.current.setView(e.geocode.center, 15); // Set the map view to the selected location with zoom level 15\n        var marker = L.marker(e.geocode.center, { icon: customIcon }).addTo(\n          mapInstance.current\n        ); // Add a marker at the selected location\n        marker\n          .bindPopup(`<div style=\"font-size: 10px;\">${e.geocode.name}</div>`)\n          .openPopup(); // Show a popup with the location name when clicked\n      });\n    }\n\n    // Cleanup function to run when the component unmounts\n    return () => {\n      if (mapInstance.current) {\n        mapInstance.current.remove(); // This properly cleans up the map instance\n        mapInstance.current = null; // Reset the map instance reference\n      }\n    };\n  }, []); // Empty dependency array means this effect runs only once on mount\n\n  return <div ref={mapRef} style={{ height: \"400px\", width: \"100%\" }} />; // The map container\n}\nexport default UxbridgeMap;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}